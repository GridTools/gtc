#-- Package metadata [setuptools] --
[metadata]
name = eve-toolchain
author = Enrique G. Paredes
author_email = enriqueg@cscs.ch
description = A stencil toolchain in pure Python
url = https://github.com/eth-cscs/eve_toolchain
keywords =
  stencil
  toolchain
  dsl
  compiler
classifiers =
  Development Status :: 2 - Pre-Alpha
  Intended Audience :: Science/Research
  License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
  Operating System :: POSIX
  Programming Language :: Python
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: Implementation :: CPython
  Topic :: Scientific/Engineering :: Atmospheric Science
  Topic :: Scientific/Engineering :: Mathematics
  Topic :: Scientific/Engineering :: Physics
long_description = file: README.md
long_description_content_type = text/markdown
license = gpl3
license_files =
  LICENSE.txt
platforms = Linux, Mac

[options]
zip_safe = False
include_package_data = True
packages = find:
package_dir=
  =src
python_requires = >=3.7.4
install_requires =
  black>=19.10b0
  boltons>=20.0
  devtools>=0.5
  toolz>=0.11.1
  jinja2>=2.10
  lark-parser>=0.8
  mako>=1.1
  networkx>=2.4
  numpy>=1.17
  packaging>=20.0
  pybind11>=2.5
  pydantic>=1.5
  toolz>=0.11
  typing_extensions>=3.4
  typing_inspect>=0.6.0
  xxhash>=1.4.4

[options.extras_require]
all =
  clang-format>=9.0
  cytoolz>=0.11
formatters =
  clang-format>=9.0
fast =
  cytoolz>=0.11

[options.packages.find]
where = src


#-- coverage --
[coverage:run]
branch = True
source_pkgs =
    eve

[coverage:paths]
source =
    src/
    .tox/*/site-packages/

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

ignore_errors = True

[coverage:html]
directory = tests/reports/coverage_html

#-- darglint --
[darglint]
docstring_style = google


#-- flake8 --
[flake8]
exclude=.git,__pycache__,.tox,.ipynb_checkpoints,.pytest_cache,.hypothesis,.coverage,.eggs,.cache,_local,*.venv
max-line-length = 100
max-complexity = 16
doctests = true
# show-source = true
ignore =
  D     # Disable docstrings errors by default
  DAR   # Disable dargling errors by default
  E203  # Whitespace before ':' (black formatter breaks this sometimes)
  E501  # Line too long (using Bugbear's B950 warning)
  W503  # line break before binary operator

#-- flake8-docstrings --
docstring-convention = google


#-- isort --
[tool:isort]
skip_glob =
    *.venv/**
    _local/**
line_length = 100
force_grid_wrap = 0
include_trailing_comma = true
multi_line_output = 3
use_parentheses = true
lines_after_imports = 2
default_section = THIRDPARTY
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
known_first_party = eve,gtc
known_third_party = atlas4py,black,boltons,cppimport,devtools,fvm_nabla_wrapper,jinja2,mako,networkx,numpy,packaging,pydantic,pytest,setuptools,sphinx_material,toolz,typing_inspect,xxhash


#-- mypy --
[mypy]
allow_redefinition = True
follow_imports = silent
show_column_numbers = True
strict_optional = True
warn_return_any = True
# warn_unreachable = True
warn_unused_configs = True
warn_unused_ignores = True
# plugins = pydantic.mypy

[mypy-eve.*]
allow_untyped_defs = False

[mypy-boltons.*]
ignore_missing_imports = True

[mypy-xxhash.*]
ignore_missing_imports = True

[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True
warn_untyped_fields = True


#-- pytest --
[tool:pytest]
# Set coverage options but do not run it by default (only tox does)
addopts = --cov-config=setup.cfg --cov-report html
norecursedirs = build dist _local* .*
markers =
    lit_suite: pytest item running a LLVM-lit test suite
